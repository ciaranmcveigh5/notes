node {

  stage("Clean Workspace") {
    sh """docker rm \$(docker ps -q -f status=exited) || true"""
    sh """docker rmi \$(docker images --filter "dangling=true" -q --no-trunc) || true"""
  }

  stage('AWS Login') {
    sh """aws ecr get-login --region eu-west-2 > login.txt"""
    sh """cut -d' ' -f1-6,9- login.txt | sh"""
  }

  stage("Git Clone") {
         git branch: '${BRANCH}', credentialsId: 'bc4cdd02-8691-46c4-bb93-20278a920677', url: 'git@bitbucket.org:project/project.git'
   }

  bitbucketStatusNotify(buildState: 'INPROGRESS')
  try {
    dir("webfrontend") {
      stage('Unit Test Setup') {
        docker.build("unit-tests")
      }

      stage("Lint") {
        sh "docker run unit-tests npm run lint"
      }
      stage("Unit Tests") {
        sh "docker run unit-tests npm test"
      }
    }

    dir("test") {
      stage('UI Test Setup') {
        docker.build("ui-tests")
      }
      stage("UI Tests") {
        sh "docker run ui-tests"
      }
    }
    bitbucketStatusNotify(buildState: 'SUCCESSFUL')
  } catch (Exception e) {
    bitbucketStatusNotify(buildState: 'FAILED')
    error e.getMessage()
  }
}
